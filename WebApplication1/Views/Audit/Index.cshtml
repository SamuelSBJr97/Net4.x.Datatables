@{
    ViewBag.Title = "Auditoria de Logs";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <h2><i class="fas fa-clipboard-list"></i> Auditoria de Logs do Sistema</h2>
            <hr />
        </div>
    </div>

    @if (ViewBag.Statistics != null)
    {
        var stats = ViewBag.Statistics as System.Collections.Generic.Dictionary<string, int>;
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card text-white bg-primary">
                    <div class="card-body">
                        <h5 class="card-title">Total de Logs</h5>
                        <h3>@(stats.ContainsKey("TotalLogs") ? stats["TotalLogs"].ToString("N0") : "0")</h3>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-white bg-info">
                    <div class="card-body">
                        <h5 class="card-title">Info</h5>
                        <h3>@(stats.ContainsKey("Info") ? stats["Info"].ToString("N0") : "0")</h3>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-white bg-warning">
                    <div class="card-body">
                        <h5 class="card-title">Warning</h5>
                        <h3>@(stats.ContainsKey("Warning") ? stats["Warning"].ToString("N0") : "0")</h3>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card text-white bg-danger">
                    <div class="card-body">
                        <h5 class="card-title">Error/Critical</h5>
                        @{
                            int errorCount = stats.ContainsKey("Error") ? stats["Error"] : 0;
                            int criticalCount = stats.ContainsKey("Critical") ? stats["Critical"] : 0;
                            int totalErrors = errorCount + criticalCount;
                        }
                        <h3>@totalErrors.ToString("N0")</h3>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Registros de Auditoria</h5>
                </div>
                <div class="card-body">
                    <table id="auditLogsTable" class="table table-striped table-bordered table-hover" style="width:100%">
                        <thead class="thead-dark">
                            <tr>
                                <th>ID</th>
                                <th>Data/Hora</th>
                                <th>Usuário</th>
                                <th>Ação</th>
                                <th>Entidade</th>
                                <th>ID Entidade</th>
                                <th>Severidade</th>
                                <th>IP</th>
                                <th>Mensagem</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- DataTables irá preencher -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <!-- DataTables CSS -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <!-- DataTables JS -->
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap4.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/responsive/2.5.0/js/dataTables.responsive.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/responsive/2.5.0/js/responsive.bootstrap4.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function() {
       console.log('Inicializando DataTable...');
        
            var table = $('#auditLogsTable').DataTable({
         "processing": true,
                "serverSide": true,
       "ajax": {
        "url": "@Url.Action("GetLogs", "Audit")",
  "type": "POST",
    "dataType": "json",
          "contentType": "application/json",
      "data": function(d) {
         console.log('Enviando requisição:', d);
         return JSON.stringify(d);
     },
 "error": function(xhr, error, thrown) {
       console.error('Erro DataTables:', error, thrown);
              console.error('Status:', xhr.status);
            console.error('Resposta:', xhr.responseText);
        alert('Erro ao carregar dados: ' + thrown + '\nStatus: ' + xhr.status + '\nVerifique o console para mais detalhes.');
          },
 "dataSrc": function(json) {
        console.log('Resposta recebida do servidor:', json);
       
          if (json.error) {
    console.error('Erro retornado pelo servidor:', json.error);
          alert('Erro do servidor: ' + json.error);
        return [];
           }
     
          if (!json.data || !Array.isArray(json.data)) {
   console.error('Resposta inválida - data não é um array:', json.data);
       return [];
            }
        
            console.log('Dados válidos recebidos:', json.data.length, 'registros');
 return json.data;
      }
                },
          "columns": [
        {
             "data": "id",
  "width": "5%"
                  },
           {
    "data": "timestamp",
      "width": "12%",
     "render": function(data) {
          if (!data) return '-';
        var date = new Date(data);
      return date.toLocaleString('pt-BR');
      }
      },
         {
"data": "userName",
     "width": "10%",
              "defaultContent": "-"
   },
         {
   "data": "action",
    "width": "8%",
                "defaultContent": "-"
          },
        {
     "data": "entityName",
   "width": "10%",
  "defaultContent": "-"
        },
          {
             "data": "entityId",
      "width": "10%",
             "defaultContent": "-"
        },
     {
         "data": "severity",
         "width": "8%",
          "render": function(data, type, row) {
    if (!data) return '-';
  var badgeClass = 'badge-secondary';
            switch(data) {
      case 'Info':
    badgeClass = 'badge-info';
        break;
 case 'Warning':
                   badgeClass = 'badge-warning';
 break;
case 'Error':
        badgeClass = 'badge-danger';
 break;
          case 'Critical':
       badgeClass = 'badge-danger';
break;
       }
      return '<span class="badge ' + badgeClass + '">' + data + '</span>';
           }
        },
    {
                  "data": "ipAddress",
   "width": "10%",
   "defaultContent": "-"
    },
 {
      "data": "message",
       "width": "27%",
      "render": function(data, type, row) {
         if (!data) return '-';
       if (data.length > 50) {
         return '<span title="' + data + '">' + data.substring(0, 50) + '...</span>';
   }
     return data;
            }
    }
 ],
          "order": [[1, "desc"]],
     "pageLength": 25,
  "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
     "language": {
      "url": "//cdn.datatables.net/plug-ins/1.13.7/i18n/pt-BR.json"
         },
"responsive": true,
   "autoWidth": false,
    "dom": '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>rt<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
   "drawCallback": function(settings) {
   console.log('DataTable recarregado (drawCallback)');
 if (settings.json) {
             console.log('Total de registros:', settings.json.recordsTotal);
 console.log('Registros filtrados:', settings.json.recordsFiltered);
              if (settings.json.data) {
console.log('Registros na página:', settings.json.data.length);
          }
     }
  },
       "initComplete": function(settings, json) {
   console.log('DataTable inicializado com sucesso!');
       console.log('Dados iniciais:', json);
        }
  });
   
   console.log('DataTable configurado:', table);
        });
    </script>

    <style>
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,0.075);
            margin-bottom: 1.5rem;
        }

        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }

        .table thead th {
            border-bottom: 2px solid #dee2e6;
            font-weight: 600;
        }

        .dataTables_wrapper .dataTables_filter input {
            margin-left: 0.5em;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            padding: 0.375rem 0.75rem;
        }

        .dataTables_wrapper .dataTables_length select {
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            padding: 0.375rem 0.75rem;
        }

        .badge {
            font-size: 0.875rem;
            padding: 0.375rem 0.75rem;
        }

        .bg-primary .card-body h3,
        .bg-info .card-body h3,
        .bg-warning .card-body h3,
        .bg-danger .card-body h3 {
            margin-bottom: 0;
        }
    </style>
}
